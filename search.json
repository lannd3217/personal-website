[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lan Dinh",
    "section": "",
    "text": "I’m a Data Scientist & Machine Learning Enthusiast passionate about turning raw data into meaningful insights. With experience in data analysis, machine learning, and visualization, I love solving complex problems and making data-driven decisions."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Lan Dinh",
    "section": "Education:",
    "text": "Education:\nM.S., Computer Science (Machine Learning) | Georgia Tech (Expected Dec 2027)\nB.A., Data Science (Business & Industrial Analysis) | University of California, Berkeley (Dec 2024)"
  },
  {
    "objectID": "index.html#what-i-do",
    "href": "index.html#what-i-do",
    "title": "Lan Dinh",
    "section": "What I Do:",
    "text": "What I Do:\nBuild machine learning models to solve real-world problems\nDesign data pipelines for predictive analytics\nDevelop interactive visualizations to make data more accessible\nApply statistical analysis & A/B testing for data-driven insights"
  },
  {
    "objectID": "index.html#tech-stack",
    "href": "index.html#tech-stack",
    "title": "Lan Dinh",
    "section": "Tech Stack:",
    "text": "Tech Stack:\nLanguages: Python, SQL\nFrameworks & Libraries: Pandas, NumPy, Scikit-learn, PyTorch\nTools: Tableau, Jupyter Notebook, Google Colab"
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html",
    "href": "posts/chronic-absenteeism/DataExploration.html",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "",
    "text": "Chronic absenteeism—defined here as missing more than 10% of enrolled days—can have a profound impact on a student’s academic performance and future prospects. Frequent absences correlate with lower grades, increased dropout rates, and diminished long-term outcomes. By understanding which factors drive absenteeism, educators and policymakers can design more targeted interventions.\nIn this notebook, I analyze records from seven schools over seven academic years. My overarching goal is to identify patterns and predictors of chronic absenteeism, with the ultimate aim of guiding effective attendance-improvement strategies."
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#introduction",
    "href": "posts/chronic-absenteeism/DataExploration.html#introduction",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "",
    "text": "Chronic absenteeism—defined here as missing more than 10% of enrolled days—can have a profound impact on a student’s academic performance and future prospects. Frequent absences correlate with lower grades, increased dropout rates, and diminished long-term outcomes. By understanding which factors drive absenteeism, educators and policymakers can design more targeted interventions.\nIn this notebook, I analyze records from seven schools over seven academic years. My overarching goal is to identify patterns and predictors of chronic absenteeism, with the ultimate aim of guiding effective attendance-improvement strategies."
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#motivation",
    "href": "posts/chronic-absenteeism/DataExploration.html#motivation",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "Motivation",
    "text": "Motivation\nStudent attendance is more than just a line item in school administrative data. It’s linked to:\n\nAcademic Achievement: Students who attend school regularly often see better test scores and improved GPAs.\n\nEquity Considerations: Certain demographic groups (e.g., English Learners, low-income students) might face unique challenges that affect attendance.\n\nResource Allocation: Understanding absenteeism helps schools allocate counselors, attendance monitors, and program funding more effectively.\n\nLong-Term Impact: Chronic absenteeism in earlier grades can ripple through a student’s educational trajectory, potentially influencing high school completion and college readiness.\n\nBy examining variables such as attendance rates, days enrolled, demographic details, and special program status, I seek to paint a clearer picture of how these features interrelate and what they reveal about absenteeism trends."
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#dataset-description",
    "href": "posts/chronic-absenteeism/DataExploration.html#dataset-description",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "Dataset Description",
    "text": "Dataset Description\nThe dataset in this study is collected from seven schools in the Oakland Unified School District over seven years, from 2012 to 2024. The seven schools are:\n\nCastlemont\n\nEast Oakland PRIDE\n\nElmhurst United\n\nMLK\n\nMcClymonds\n\nPrescott\n\nWOMS\n\nEach file spans multiple academic years, resulting in a total of over 20,000 student-year observations. The key columns include:\n\nANON_ID: A unique, anonymized student identifier.\n\nBirthdate: Date of birth, from which I derived each student’s approximate age.\n\nGen: Student’s gender.\n\nEth: Ethnicity (e.g., Latino, African American, White, etc.).\n\nFluency: English proficiency classification (e.g., EO, EL, RFEP, IFEP).\n\nSpEd: Special Education status (e.g., “Special Ed” or “Not Special Ed”).\n\nGrade: Student’s grade for that academic year (-1 through 12 in this dataset).\n\nAttRate: Attendance rate (1 – [Days Absent / Days Enrolled]).\n\nDaysEnr: Number of days enrolled in that school year.\n\nDaysAbs: Number of days absent in that school year.\n\nSusp: Number of suspensions.\n\nCurrWeightedTotGPA: Weighted GPA, if applicable.\n\nSED: Socio-economically Disadvantaged status.\n\nSchool: Name of the school.\n\nYear: Academic year label (e.g., “17-18”, “18-19”).\n\nAge: Computed from birth year and the school year.\n\nChroAbs: Binary variable (1 if absent more than 10% of enrolled days, 0 otherwise)."
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#dataset-overview",
    "href": "posts/chronic-absenteeism/DataExploration.html#dataset-overview",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "1. Dataset Overview",
    "text": "1. Dataset Overview\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport ipywidgets as widgets\nfrom ipywidgets import interact, interact_manual\nfrom IPython.display import display\n\n\n# Load 7 schools dataset\ncastlemont = pd.read_csv('data/Castlemont.csv')\neof = pd.read_csv('data/East Oakland PRIDE.csv')\nelmhurst_united = pd.read_csv('data/Elmhurst United.csv')\nmlk = pd.read_csv('data/MLK.csv')\nmcClymonds = pd.read_csv('data/McClymonds.csv')\nprescott = pd.read_csv('data/Prescott.csv')\nwoms = pd.read_csv('data/ONGB -Lan/WOMS.csv')\n# castlemont.head()\n\n\n# Concatenate into one dataframe\nschools = pd.concat([castlemont, eof, elmhurst_united, mlk, mcClymonds, prescott, woms]).reset_index(drop=True)\nschools.head(5)\n\n\n  \n    \n\n\n\n\n\n\nANON_ID\nBirthdate\nGen\nEth\nFluency\nSpEd\nGrade\nAttRate\nDaysEnr\nDaysAbs\nSusp\nCurrWeightedTotGPA\nSED\nSchool\nYear\n\n\n\n\n0\n338\n2003-07-21\nF\nLatino\nRFEP\nNot Special Ed\n9\n0.9889\n180.0\n2.0\nNaN\n3.65\nUnknown\nCastlemont\n17-18\n\n\n1\n340\n2003-03-31\nM\nLatino\nEL\nNot Special Ed\n9\n0.8389\n180.0\n29.0\n2.0\n0.06\nUnknown\nCastlemont\n17-18\n\n\n2\n478\n2003-09-06\nF\nMultiple Ethnicity\nEO\nSpecial Ed\n9\n0.7263\n179.0\n49.0\n1.0\n0.24\nUnknown\nCastlemont\n17-18\n\n\n3\n686\n2000-04-02\nM\nLatino\nEL\nNot Special Ed\n12\n0.9611\n180.0\n7.0\nNaN\n2.00\nUnknown\nCastlemont\n17-18\n\n\n4\n693\n2002-03-28\nF\nLatino\nRFEP\nNot Special Ed\n10\n0.9889\n180.0\n2.0\nNaN\n2.59\nUnknown\nCastlemont\n17-18\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n    \n  \n\n\n\n# Add age (school year - birthdate) column\ndef calculate_age(df):\n  df['Birthdate'] = pd.to_datetime(df['Birthdate'])\n  end_year = df['Year'].str.split('-').str[0].astype(int)\n  year = end_year.apply(lambda x: 2000 + x)\n  df['Age'] = year - df['Birthdate'].dt.year\n  return df\n\nschools = calculate_age(schools)\nschools.head(5)\n\n\n  \n    \n\n\n\n\n\n\nANON_ID\nBirthdate\nGen\nEth\nFluency\nSpEd\nGrade\nAttRate\nDaysEnr\nDaysAbs\nSusp\nCurrWeightedTotGPA\nSED\nSchool\nYear\nAge\n\n\n\n\n0\n338\n2003-07-21\nF\nLatino\nRFEP\nNot Special Ed\n9\n0.9889\n180.0\n2.0\nNaN\n3.65\nUnknown\nCastlemont\n17-18\n14\n\n\n1\n340\n2003-03-31\nM\nLatino\nEL\nNot Special Ed\n9\n0.8389\n180.0\n29.0\n2.0\n0.06\nUnknown\nCastlemont\n17-18\n14\n\n\n2\n478\n2003-09-06\nF\nMultiple Ethnicity\nEO\nSpecial Ed\n9\n0.7263\n179.0\n49.0\n1.0\n0.24\nUnknown\nCastlemont\n17-18\n14\n\n\n3\n686\n2000-04-02\nM\nLatino\nEL\nNot Special Ed\n12\n0.9611\n180.0\n7.0\nNaN\n2.00\nUnknown\nCastlemont\n17-18\n17\n\n\n4\n693\n2002-03-28\nF\nLatino\nRFEP\nNot Special Ed\n10\n0.9889\n180.0\n2.0\nNaN\n2.59\nUnknown\nCastlemont\n17-18\n15\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n    \n  \n\n\n\n# Add ChroAbs column with 1 is student who absent for more than 10% of enrolled days\nabs_per = schools['DaysAbs'] / schools['DaysEnr']\nschools['ChroAbs'] = [1 if x &gt; 0.1 else 0 for x in abs_per]\nschools.tail(5)\n\n\n  \n    \n\n\n\n\n\n\nANON_ID\nBirthdate\nGen\nEth\nFluency\nSpEd\nGrade\nAttRate\nDaysEnr\nDaysAbs\nSusp\nCurrWeightedTotGPA\nSED\nSchool\nYear\nAge\nChroAbs\n\n\n\n\n21989\n77312\n2009-10-26\nM\nAfrican American\nEO\nNot Special Ed\n8\n0.9611\n180.0\n7.0\nNaN\n2.39\nSED\nWOMS\n23-24\n14\n0\n\n\n21990\n77803\n2011-06-30\nM\nLatino\nEO\nSpecial Ed\n7\n0.6222\n45.0\n17.0\nNaN\n0.00\nSED\nWOMS\n23-24\n12\n1\n\n\n21991\n78129\n2011-10-09\nF\nLatino\nRFEP\nNot Special Ed\n6\n0.9441\n179.0\n10.0\nNaN\n3.38\nNot SED\nWOMS\n23-24\n12\n0\n\n\n21992\n78498\n2011-06-21\nM\nAfrican American\nEO\nNot Special Ed\n7\n0.9333\n180.0\n12.0\nNaN\n3.66\nSED\nWOMS\n23-24\n12\n0\n\n\n21993\n79427\n2012-01-10\nM\nLatino\nRFEP\nNot Special Ed\n6\n0.7375\n80.0\n21.0\nNaN\n3.37\nSED\nWOMS\n23-24\n11\n1\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n    \n  \n\n\nInitially, I observed that Attendance Rate and Days Absent are critical measures as they are directly linked to Chronic Absenteeism. GPA (CurrWeightedTotGPA) variable is important as I assume that lower academic performance is typically associated with higher absenteeism. Demographic factors such as Gender and Ethnicity provide context for understanding potential disparities in academic performance as well as absenteeism patterns. Fluency is another significant variable, as language barriers often correlate with performance challenges, especially for non-native speakers. The SpEd reports whether students have special educational needs, and SED indicates economic disadvantage, both of which can substantially impact educational engagement. Economic hardship, for example, has been linked to lower attendance rates and higher absenteeism.\nFurthermore, the dataset have missing or inconsistent values that need to be addressed. DaysEnr variable has unusually low numbers, which could make absenteeism rates appear higher than they are. Susp has the highest number of missing values (20,556 records). There are 6,441 missing values in CurrWeightedTotGPA, accounting for a large portion of the dataset. Each of the AttRate, DaysEnr, and DaysAbs has 29 missing entries. In terms of inconsistent values, SED column has 6,317 entries labeled as Unknown. In the Fluency column, there are 100 entries marked as TBD and 6 as Unknown. These missing and inconsistent values will be addressed further\n\nfrom IPython.display import display, HTML\n# Generate HTML for each column's value counts\nhtml_output = \"&lt;div style='display: flex; flex-wrap: wrap;'&gt;\"\n\nfor col in cat_cols:\n    # Get the value counts for the column\n    counts = schools[col].value_counts()\n\n    # Create an HTML table for the value counts of each column\n    html_output += f\"\"\"\n    &lt;div style='margin-right: 20px; padding: 10px; border: 1px solid #ddd;'&gt;\n        &lt;h4&gt;{col}&lt;/h4&gt;\n        {counts.to_frame().to_html(header=False)}\n    &lt;/div&gt;\n    \"\"\"\n\nhtml_output += \"&lt;/div&gt;\"\n\n# Display all counts side by side in HTML format\ndisplay(HTML(html_output))\n\n\n    \n        Gen\n        \n\n\n\nGen\n\n\n\n\n\nM\n11857\n\n\nF\n10113\n\n\nN\n24\n\n\n\n\n    \n    \n    \n        Eth\n        \n\n\n\nEth\n\n\n\n\n\nLatino\n10645\n\n\nAfrican American\n8335\n\n\nWhite\n840\n\n\nAsian\n753\n\n\nNot Reported\n526\n\n\nMultiple Ethnicity\n424\n\n\nPacific Islander\n358\n\n\nNative American\n63\n\n\nFilipino\n50\n\n\n\n\n    \n    \n    \n        Fluency\n        \n\n\n\nFluency\n\n\n\n\n\nEO\n10653\n\n\nEL\n8281\n\n\nRFEP\n2688\n\n\nIFEP\n266\n\n\nTBD\n100\n\n\nUnknown\n6\n\n\n\n\n    \n    \n    \n        SpEd\n        \n\n\n\nSpEd\n\n\n\n\n\nNot Special Ed\n18144\n\n\nSpecial Ed\n3850\n\n\n\n\n    \n    \n    \n        Grade\n        \n\n\n\nGrade\n\n\n\n\n\n9\n2623\n\n\n10\n2540\n\n\n7\n2189\n\n\n6\n2182\n\n\n8\n2168\n\n\n11\n2148\n\n\n12\n1711\n\n\n1\n1089\n\n\n3\n1065\n\n\n2\n1036\n\n\n4\n1015\n\n\n0\n980\n\n\n5\n940\n\n\n-1\n308\n\n\n\n\n    \n    \n    \n        SED\n        \n\n\n\nSED\n\n\n\n\n\nSED\n14363\n\n\nUnknown\n6317\n\n\nNot SED\n1314\n\n\n\n\n    \n    \n    \n        Age\n        \n\n\n\nAge\n\n\n\n\n\n16\n2267\n\n\n13\n2253\n\n\n12\n2236\n\n\n17\n2176\n\n\n15\n2142\n\n\n14\n2134\n\n\n11\n1785\n\n\n7\n1036\n\n\n8\n1033\n\n\n6\n1020\n\n\n9\n1017\n\n\n10\n981\n\n\n5\n814\n\n\n18\n798\n\n\n19\n161\n\n\n4\n96\n\n\n20\n41\n\n\n21\n4\n\n\n\n\n    \n    \n    \n        Year\n        \n\n\n\nYear\n\n\n\n\n\n19-20\n3375\n\n\n20-21\n3197\n\n\n21-22\n3169\n\n\n23-24\n3124\n\n\n22-23\n3113\n\n\n18-19\n3034\n\n\n17-18\n2982\n\n\n\n\n    \n    \n    \n        School\n        \n\n\n\nSchool\n\n\n\n\n\nCastlemont\n6456\n\n\nElmhurst United\n4989\n\n\nMLK\n2720\n\n\nEast Oakland PRIDE\n2634\n\n\nMcClymonds\n2566\n\n\nWOMS\n1550\n\n\nPrescott\n1079\n\n\n\n\n    \n    \n    \n        ChroAbs\n        \n\n\n\nChroAbs\n\n\n\n\n\n0\n11882\n\n\n1\n10112\n\n\n\n\n    \n    \n\n\n\n# Info for all schools over past 7 years\nschools.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 21994 entries, 0 to 21993\nData columns (total 17 columns):\n #   Column              Non-Null Count  Dtype         \n---  ------              --------------  -----         \n 0   ANON_ID             21994 non-null  int64         \n 1   Birthdate           21994 non-null  datetime64[ns]\n 2   Gen                 21994 non-null  object        \n 3   Eth                 21994 non-null  object        \n 4   Fluency             21994 non-null  object        \n 5   SpEd                21994 non-null  object        \n 6   Grade               21994 non-null  int64         \n 7   AttRate             21965 non-null  float64       \n 8   DaysEnr             21965 non-null  float64       \n 9   DaysAbs             21965 non-null  float64       \n 10  Susp                1438 non-null   float64       \n 11  CurrWeightedTotGPA  15553 non-null  float64       \n 12  SED                 21994 non-null  object        \n 13  School              21994 non-null  object        \n 14  Year                21994 non-null  object        \n 15  Age                 21994 non-null  int64         \n 16  ChroAbs             21994 non-null  int64         \ndtypes: datetime64[ns](1), float64(5), int64(4), object(7)\nmemory usage: 2.9+ MB\n\n\n\n# Missing values total\nschools.isna().sum()\n\n\n\n\n\n\n\n\n0\n\n\n\n\nANON_ID\n0\n\n\nBirthdate\n0\n\n\nGen\n0\n\n\nEth\n0\n\n\nFluency\n0\n\n\nSpEd\n0\n\n\nGrade\n0\n\n\nAttRate\n29\n\n\nDaysEnr\n29\n\n\nDaysAbs\n29\n\n\nSusp\n20556\n\n\nCurrWeightedTotGPA\n6441\n\n\nSED\n0\n\n\nSchool\n0\n\n\nYear\n0\n\n\nAge\n0\n\n\nChroAbs\n0\n\n\n\n\ndtype: int64\n\n\n\n# Missing values percentage\nschools.isna().mean()\n\n\n\n\n\n\n\n\n0\n\n\n\n\nANON_ID\n0.000000\n\n\nBirthdate\n0.000000\n\n\nGen\n0.000000\n\n\nEth\n0.000000\n\n\nFluency\n0.000000\n\n\nSpEd\n0.000000\n\n\nGrade\n0.000000\n\n\nAttRate\n0.001319\n\n\nDaysEnr\n0.001319\n\n\nDaysAbs\n0.001319\n\n\nSusp\n0.934619\n\n\nCurrWeightedTotGPA\n0.292853\n\n\nSED\n0.000000\n\n\nSchool\n0.000000\n\n\nYear\n0.000000\n\n\nAge\n0.000000\n\n\nChroAbs\n0.000000\n\n\n\n\ndtype: float64"
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#exploratory-data-analysis",
    "href": "posts/chronic-absenteeism/DataExploration.html#exploratory-data-analysis",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "2. Exploratory Data Analysis",
    "text": "2. Exploratory Data Analysis"
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#a-numerical-distributions-attendance-rate-days-enrolled-days-absent",
    "href": "posts/chronic-absenteeism/DataExploration.html#a-numerical-distributions-attendance-rate-days-enrolled-days-absent",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "2.a Numerical Distributions: Attendance Rate, Days Enrolled, Days Absent",
    "text": "2.a Numerical Distributions: Attendance Rate, Days Enrolled, Days Absent\n\ndef plot_distribution_and_summary(df, col, title=None):\n    \"\"\"\n    Plots the distribution histogram and statistical summary for a specified column.\n\n    Parameters:\n    - df: DataFrame containing the data\n    - col: str, the name of the column to plot and summarize\n    - title: modified title for the plot\n    \"\"\"\n    # Calculate the statistical summary for the specified column\n    summary_stats = df[col].describe()\n\n    # Set up a figure with 2 subplots: 1 for the plot, 1 for the text\n    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(14, 6), gridspec_kw={'width_ratios': [3, 1]})\n\n    # Plot the histogram for the specified column\n    if title:\n        ax1.set_title(title, fontweight='bold', color='darkblue')\n    else:\n        ax1.set_title(f'{col} Overall Distribution', fontweight='bold', color='darkblue')\n    ax1.set_xlabel(f'{col}', fontsize=16)\n    ax1.set_ylabel('Frequency', fontsize=16)\n    sns.histplot(data=df, x=col, ax=ax1)\n    ax1.grid(True, linestyle='--', alpha=0.5)\n\n    # Display the statistical summary on the right subplot\n    ax2.axis('off')  # Turn off the axis for the text display\n    summary_text = summary_stats.to_string()\n    ax2.text(0, 0.5, summary_text, fontsize=12, va='center', ha='left', fontweight='bold', color='navy')\n\n    # Adjust layout and show the plot\n    plt.tight_layout()\n    plt.show()\n\n# Attendance Overall Distribution\nplot_distribution_and_summary(schools, 'AttRate')\n\n\n\n\n\n\n\n\n\ndef plot_boxplot_with_counts(df, numerical_col, categorical_col):\n    \"\"\"\n    Plots a boxplot for a numerical column grouped by a categorical column\n    along with the count of each category.\n\n    Parameters:\n    - df: DataFrame containing the data\n    - numerical_col: str, the name of the numerical column to plot\n    - categorical_col: str, the name of the categorical column to group by\n    \"\"\"\n\n    # Define the category order based on the boxplot\n    category_order = df[categorical_col].value_counts().index.tolist()\n\n    # Set up the figure with two subplots: one for the boxplot and one for the bar plot\n    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(16, 6), gridspec_kw={'width_ratios': [3, 1]})\n\n    # Plot the boxplot for the numerical column by the categorical column\n    sns.boxplot(data=df, y=categorical_col, x=numerical_col, ax=ax1, hue =categorical_col, palette=\"vlag\", order=category_order)\n    ax1.set_title(f'Boxplot of {numerical_col} by {categorical_col}', fontweight='bold', color='darkblue')\n    ax1.set_xlabel(categorical_col, fontweight='bold')\n    ax1.set_ylabel(numerical_col, fontweight='bold')\n    ax1.grid(True, linestyle='--', alpha=0.5)\n\n    # Plot the count of each category as a bar plot\n    sns.countplot(data=df, y=categorical_col, order=category_order, ax=ax2, hue=categorical_col, palette='vlag')\n    ax2.set_title(f'Counts of Each {categorical_col} Category', fontweight='bold', color='darkblue')\n    ax2.set_xlabel(categorical_col, fontweight='bold')\n    ax2.set_ylabel('Count', fontweight='bold')\n    ax2.grid(True, linestyle='--', alpha=0.5)\n\n    # Adjust layout and display the plots\n    plt.tight_layout()\n    plt.show()\n\n# Attendance Distributions by School\nplot_boxplot_with_counts(schools, 'AttRate', 'School')\n\n\n\n\n\n\n\n\nObservation: The boxplot shows the distribution of attendance rates across different schools. Elmhurst United displays a higher median attendance rate while Castlemont has the lowest median attendance rate with largest variability. Note that Castlemont also has the highest number of data among other schools.\n\n# Days Absent Overall Distribution\nplot_distribution_and_summary(schools, 'DaysAbs')\n\n\n\n\n\n\n\n\n\n# Days Absent Distribution by School\nplot_boxplot_with_counts(schools, 'DaysAbs', 'School')\n\n\n\n\n\n\n\n\nObservation: The distribution of Days Absent closely mirrors that of Attendance Rate, indicating a strong dependency between the two. We can consider dropping the DaysAbs column later to avoid redundancy.\n\n# Days Enrolled Overall Distribution\nplot_distribution_and_summary(schools, 'DaysEnr')\n\n\n\n\n\n\n\n\n\n# Days Enrolled Distribution by School\nplot_boxplot_with_counts(schools, 'DaysEnr', 'School')\n\n\n\n\n\n\n\n\nObservation: The Days Enrolled column contains numerous unusually low values. This raises questions about the underlying causes (further research on how schools report days enrolled may be necessary). We may also need to reconsider the definition of chronic absenteeism (where the ratio of days absent to days enrolled is greater than 10%), as low values for days enrolled could disproportionately impact the chronic absenteeism rate.\nKey findings including:\n\nMost students have high attendance rates, though certain schools show significant absenteeism challenges.\nVariability in absenteeism and enrollment suggests that some schools might face systemic issues with student attendance and retention.\nThe distribution of enrolled days highlights potential inconsistencies in data reporting, which could affect the accuracy of absenteeism measurements."
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#b.-time-series-over-year-attendance-rate-and-chronic-absenteeism-percentage",
    "href": "posts/chronic-absenteeism/DataExploration.html#b.-time-series-over-year-attendance-rate-and-chronic-absenteeism-percentage",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "2b. Time Series over Year: Attendance Rate and Chronic Absenteeism Percentage",
    "text": "2b. Time Series over Year: Attendance Rate and Chronic Absenteeism Percentage\n\n# Time series plot for attendate rate, aggregating by median\nplt.figure(figsize=(10, 5))\nplt.title('Attentance Rate Across Schools Over 7 Years', fontweight='bold', color='darkblue')\nsns.lineplot(data=schools, x='Year', y='AttRate', hue='School', estimator='median', errorbar=None,  marker='o', linewidth=0.7)\nplt.grid(True, linestyle='--', alpha=0.5)\nplt.legend(loc='upper left', bbox_to_anchor=(1.05, 1));\n\n\n\n\n\n\n\n\n\nDive deeper into MLK and Castlemont Attendance Rate Distribution\n\n# Examine attendance rate at Castlemont, espcially year 20-21\nplot_distribution_and_summary(schools[(schools['School'] == 'Castlemont') & (schools['Year'] == '20-21')], 'AttRate', \"Attendance Rate at Castlemont in 20-21\")\n\n\n\n\n\n\n\n\n\n# Examine attendance rate at MLK, espcially year 22-23\nplot_distribution_and_summary(schools[(schools['School'] == 'MLK') & (schools['Year'] == '22-23')], 'AttRate', \"Attendance Rate at MLK in 22-23\")\n\n\n\n\n\n\n\n\n\n# Time series plot for Days Enrolled, aggregating by median\nplt.figure(figsize=(10, 5))\nplt.title('Days Enrolled Across Schools Over 7 Years', fontweight='bold', color='darkblue')\nsns.lineplot(data=schools, x='Year', y='DaysEnr', hue='School', estimator='median', errorbar=None,  marker='o', linewidth=0.7)\nplt.grid(True, linestyle='--', alpha=0.5)\nplt.legend(loc='upper left', bbox_to_anchor=(1.05, 1))\nplt.grid(True, linestyle='--', alpha=0.5);\n\n\n\n\n\n\n\n\n\n# ChronicAbsent Percentage by Year\nplt.figure(figsize=(10, 5))\nplt.title('Chronic Absenteeism Percentage Across Schools Over 7 Years', fontweight='bold', color='darkblue')\nsns.lineplot(data=schools, x='Year', y='ChroAbs', hue='School', estimator='mean', errorbar=None,  marker='o', linewidth=0.7)\nplt.grid(True, linestyle='--', alpha=0.5)\nplt.legend(loc='upper left', bbox_to_anchor=(1.05, 1))\nplt.grid(True, linestyle='--', alpha=0.5);\n\n\n\n\n\n\n\n\nQuick observation: Even though 19-20 has lowest median days enrolled but the percentage of chronically absent student are under 40%. School years 21-22 and 22-23 have high chronic absenteeism percentage.\nKey Findings:\n\nAttendance Trends: Attendance rates fluctuated over the seven-year period, with notable declines during the 2018-19 and 2021-22 school years. These dips, particularly during the pandemic years, indicate district-wide challenges in maintaining student engagement.\nDays Enrolled: Enrollment days remained stable at around 180 for most years, except for a sharp drop in 2019-20, indicating potential mid-year closures or interruptions.\nCastlemont-Specific Challenges: Castlemont consistently displayed lower attendance rates and higher chronic absenteeism, especially in 2020-21, signaling a need for targeted interventions. The school’s unique struggles may be due to underlying socio-economic conditions, resource gaps, or other external factors."
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#c.-demographic-factors-gender-ethnicity-fluency-special-education-and-socio-economically-disadvantaged-status",
    "href": "posts/chronic-absenteeism/DataExploration.html#c.-demographic-factors-gender-ethnicity-fluency-special-education-and-socio-economically-disadvantaged-status",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "2c. Demographic Factors: Gender, Ethnicity, Fluency, Special Education and Socio-economically Disadvantaged Status",
    "text": "2c. Demographic Factors: Gender, Ethnicity, Fluency, Special Education and Socio-economically Disadvantaged Status\n\ndef plot_bar(df, col, title=None):\n    \"\"\"\n    Plots a bar chart for a specified column.\n\n    Parameters:\n    - df: DataFrame containing the data\n    - col: str, the name of the column to plot\n    - title: modified title for the plot\n    \"\"\"\n    plt.figure(figsize=(10, 5))\n    if title:\n        plt.title(title, fontweight='bold', color='darkblue')\n    else:\n        plt.title(f'Counts of {col} per School over 7 Years', fontweight='bold', color='darkblue')\n    sns.countplot(data=df, y='School', hue=col, palette='Paired')\n    plt.grid(True, linestyle='--', alpha=0.5)\n    plt.legend(loc='upper left', bbox_to_anchor=(1.05, 1))\n    plt.show()\n\n# Bar plot of Gender per School\nplot_bar(schools, 'Gen', \"Counts of Gender per School over 7 Years\")\n\n\n\n\n\n\n\n\n\n# Bar plot of Ethnicity per School\nplot_bar(schools, 'Eth', \"Counts of Ethnicity per School over 7 Years\")\n\n\n\n\n\n\n\n\n\n# Bar plot of Fluency per School\nplot_bar(schools, 'Fluency')\n\n\n\n\n\n\n\n\n\n# Bar plot of Special Education per School\nplot_bar(schools, 'SpEd', \"Counts of Special Education Status per School over 7 Years\")\n\n\n\n\n\n\n\n\n\n# Bar plot of Socio-Economically Disadvantaged Counts per school\nplot_bar(schools, 'SED', \"Socio-Economically Disadvantaged Status per School over 7 Years\")\n\n\n\n\n\n\n\n\nKey Findings:\n\nGender Distribution: Most schools have a balanced distribution of male and female students, with Castlemont having the highest overall student count. The presence of a small number of “N” (likely representing non-binary or not reported) entries suggests that some schools are starting to account for gender diversity beyond the binary categories.\nEthnic Diversity: African American and Latino students make up the majority across most schools, but their proportions vary significantly. Castlemont, East Oakland PRIDE, and Elmhurst United have a higher concentration of Latino students, while the rest have more African American students. Smaller ethnic groups, such as Pacific Islanders and Native Americans, are underrepresented, which may affect certain analyses if not accounted for properly.\nLanguage Fluency: English Only (EO) students dominate in all schools, particularly in MLK, McClymonds, Prescott, and WOMS. English Learners (EL) and Reclassified Fluent English Proficient (RFEP) are also significant, especially in Castlemont, East Oakland PRIDE, and Elmhurst United.\nSpecial Education (SpEd): A considerable number of students in each school are enrolled in special education programs, with Castlemont and Elmhurst United having the highest counts. However, the majority of students across all schools are classified as Not Special Ed. This distribution provides insights into the varied support needs within each school.\nSocio-Economically Disadvantaged (SED) Status: High counts of SED students are evident in all schools, indicating economic challenges in these communities. A large number of “Unknown” entries, particularly in Castlemont, may obscure true socio-economic trends and should be considered when analyzing the impact of SED on student outcomes."
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#b.-handle-duplicates-and-irrelevant-data",
    "href": "posts/chronic-absenteeism/DataExploration.html#b.-handle-duplicates-and-irrelevant-data",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "3b. Handle Duplicates and Irrelevant Data",
    "text": "3b. Handle Duplicates and Irrelevant Data\n\n# Frequency of values in each categorical column\n\n# Generate HTML for each column's value counts\nhtml_output = \"&lt;div style='display: flex; flex-wrap: wrap;'&gt;\"\n\ncat_cols = ['Gen', 'Eth', 'Fluency', 'SpEd', 'Grade', 'SED', 'Age', 'ChroAbs']\nfor col in cat_cols:\n    # Get the value counts for the column\n    counts = schools[col].value_counts()\n\n    # Create an HTML table for the value counts of each column\n    html_output += f\"\"\"\n    &lt;div style='margin-right: 20px; padding: 10px; border: 1px solid #ddd;'&gt;\n        &lt;h4&gt;{col}&lt;/h4&gt;\n        {counts.to_frame().to_html(header=False)}\n    &lt;/div&gt;\n    \"\"\"\n\nhtml_output += \"&lt;/div&gt;\"\n\n# Display all counts side by side in HTML format\ndisplay(HTML(html_output))\n\n\n    \n        Gen\n        \n\n\n\nGen\n\n\n\n\n\nM\n11857\n\n\nF\n10113\n\n\nN\n24\n\n\n\n\n    \n    \n    \n        Eth\n        \n\n\n\nEth\n\n\n\n\n\nLatino\n10645\n\n\nAfrican American\n8335\n\n\nWhite\n840\n\n\nAsian\n753\n\n\nNot Reported\n526\n\n\nMultiple Ethnicity\n424\n\n\nPacific Islander\n358\n\n\nNative American\n63\n\n\nFilipino\n50\n\n\n\n\n    \n    \n    \n        Fluency\n        \n\n\n\nFluency\n\n\n\n\n\nEO\n10653\n\n\nEL\n8281\n\n\nRFEP\n2688\n\n\nIFEP\n266\n\n\nTBD\n100\n\n\nUnknown\n6\n\n\n\n\n    \n    \n    \n        SpEd\n        \n\n\n\nSpEd\n\n\n\n\n\nNot Special Ed\n18144\n\n\nSpecial Ed\n3850\n\n\n\n\n    \n    \n    \n        Grade\n        \n\n\n\nGrade\n\n\n\n\n\n9\n2623\n\n\n10\n2540\n\n\n7\n2189\n\n\n6\n2182\n\n\n8\n2168\n\n\n11\n2148\n\n\n12\n1711\n\n\n1\n1089\n\n\n3\n1065\n\n\n2\n1036\n\n\n4\n1015\n\n\n0\n980\n\n\n5\n940\n\n\n-1\n308\n\n\n\n\n    \n    \n    \n        SED\n        \n\n\n\nSED\n\n\n\n\n\nSED\n14363\n\n\nUnknown\n6317\n\n\nNot SED\n1314\n\n\n\n\n    \n    \n    \n        Age\n        \n\n\n\nAge\n\n\n\n\n\n16\n2267\n\n\n13\n2253\n\n\n12\n2236\n\n\n17\n2176\n\n\n15\n2142\n\n\n14\n2134\n\n\n11\n1785\n\n\n7\n1036\n\n\n8\n1033\n\n\n6\n1020\n\n\n9\n1017\n\n\n10\n981\n\n\n5\n814\n\n\n18\n798\n\n\n19\n161\n\n\n4\n96\n\n\n20\n41\n\n\n21\n4\n\n\n\n\n    \n    \n    \n        ChroAbs\n        \n\n\n\nChroAbs\n\n\n\n\n\n0\n11882\n\n\n1\n10112\n\n\n\n\n    \n    \n\n\n\nGender: has one unsual value of ‘m’. Modify it to “M”\n\n# Gender has one unsual value of 'm'. Modify it to \"M\"\nschools['Gen'] = schools['Gen'].replace('m', 'M')\nschools['Gen'].value_counts()\n\n\n\n\n\n\n\n\ncount\n\n\nGen\n\n\n\n\n\nM\n11857\n\n\nF\n10113\n\n\nN\n24\n\n\n\n\ndtype: int64\n\n\n\n\nFluency:\nThere are 100 records labeled as TBD and 6 asUnknown in the Fluency column. Upon examining records with TBD, we find that these are primarily new enrollees. For students who reappear in subsequent years, their Fluency values are recorded in later years. Based on this insight, I fill Unknown or TBD entries in Fluency with matching values from other records with the same ANON_ID. After this process, 68 TBD and 2 Unknown entries remain, representing students who appear only once in the dataset—likely indicating that they did not re-enroll. Even though these students account for only 3% of the dataset, they still provide valuable information in other variables, such as Attendance Rate, SED, SpEd, etc. Therefore, I’ve decided to retain these records rather than dropping them. However, to simplify our model, I will consolidate TBD and Unknown into a single label, Unknown, in the Fluency column. This will help reduce model complexity while preserving the information these records offer.\n\n# Look at the records that have Unknown in Fluency\nschools[schools['Fluency'] == 'Unknown']\n\n\n  \n    \n\n\n\n\n\n\nANON_ID\nBirthdate\nGen\nEth\nFluency\nSpEd\nGrade\nAttRate\nDaysEnr\nDaysAbs\nSusp\nCurrWeightedTotGPA\nSED\nSchool\nYear\nAge\nChroAbs\n\n\n\n\n4662\n78297\n2004-11-24\nM\nLatino\nUnknown\nNot Special Ed\n10\n0.9892\n93.0\n1.0\nNaN\n3.63\nNot SED\nCastlemont\n21-22\n17\n0\n\n\n4663\n78298\n2004-11-24\nM\nLatino\nUnknown\nNot Special Ed\n10\n0.9892\n93.0\n1.0\nNaN\n3.63\nNot SED\nCastlemont\n21-22\n17\n0\n\n\n5159\n44057\n2008-01-15\nF\nLatino\nUnknown\nNot Special Ed\n9\n0.5122\n41.0\n20.0\nNaN\n0.00\nUnknown\nCastlemont\n22-23\n14\n1\n\n\n12481\n5911\n2009-10-17\nF\nLatino\nUnknown\nNot Special Ed\n7\n0.7385\n65.0\n17.0\nNaN\n3.00\nUnknown\nElmhurst United\n22-23\n13\n1\n\n\n15905\n50958\n2014-03-23\nM\nWhite\nUnknown\nNot Special Ed\n1\n0.9063\n64.0\n6.0\nNaN\nNaN\nNot SED\nMLK\n21-22\n7\n0\n\n\n20077\n31810\n2017-02-25\nM\nNot Reported\nUnknown\nNot Special Ed\n-1\n0.0833\n12.0\n11.0\nNaN\nNaN\nSED\nPrescott\n21-22\n4\n1\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n    \n  \n\n\n\n# Examine one student\nschools[schools['ANON_ID'] == 78297]\n\n\n  \n    \n\n\n\n\n\n\nANON_ID\nBirthdate\nGen\nEth\nFluency\nSpEd\nGrade\nAttRate\nDaysEnr\nDaysAbs\nSusp\nCurrWeightedTotGPA\nSED\nSchool\nYear\nAge\nChroAbs\n\n\n\n\n4662\n78297\n2004-11-24\nM\nLatino\nUnknown\nNot Special Ed\n10\n0.9892\n93.0\n1.0\nNaN\n3.63\nNot SED\nCastlemont\n21-22\n17\n0\n\n\n5571\n78297\n2004-11-24\nM\nLatino\nEL\nNot Special Ed\n11\n0.9056\n180.0\n17.0\nNaN\n3.43\nSED\nCastlemont\n22-23\n18\n0\n\n\n6442\n78297\n2004-11-24\nM\nLatino\nEL\nNot Special Ed\n12\n0.8833\n180.0\n21.0\nNaN\n2.40\nSED\nCastlemont\n23-24\n19\n1\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n    \n  \n\n\n\n# Function to fill 'Unknown' or 'TBD' in 'Fluency' with matching 'ANON_ID' values\ndef fill_fluency(row):\n    if row['Fluency'] in ['Unknown', 'TBD']:\n        # Find the first non-null value of 'Fluency' for the same 'ANON_ID'\n        matching_value = schools_cleaned[(schools_cleaned['ANON_ID'] == row['ANON_ID']) & (schools_cleaned['Fluency'].notna()) & (~schools_cleaned['Fluency'].isin(['Unknown', 'TBD']))]\n\n        # If there is a match, return its 'Fluency' value; otherwise, return the original 'Fluency'\n        if not matching_value.empty:\n            return matching_value.iloc[0]['Fluency']\n    return row['Fluency']\n\n# Apply the function to the 'Fluency' column\nschools_cleaned['Fluency'] = schools_cleaned.apply(fill_fluency, axis=1)\n\n\nschools_cleaned['Fluency'].value_counts()\n\n\n\n\n\n\n\n\ncount\n\n\nFluency\n\n\n\n\n\nEO\n10638\n\n\nEL\n8308\n\n\nRFEP\n2683\n\n\nIFEP\n266\n\n\nTBD\n68\n\n\nUnknown\n2\n\n\n\n\ndtype: int64\n\n\n\nprint('Percentage of TBD and Unknown left in the dataset: ', 70/schools_cleaned.shape[0])\n\nPercentage of TBD and Unknown left in the dataset:  0.0031868882312770315\n\n\n\n# Examine the students left with TBD values in Fluency\nschools_cleaned[schools_cleaned['Fluency'] == 'TBD']\n\n\n  \n    \n\n\n\n\n\n\nANON_ID\nBirthdate\nGen\nEth\nFluency\nSpEd\nGrade\nAttRate\nDaysEnr\nDaysAbs\nSusp\nCurrWeightedTotGPA\nSED\nSchool\nYear\nAge\nChroAbs\n\n\n\n\n8\n870\n2000-12-23\nM\nLatino\nTBD\nNot Special Ed\n9\n0.8761\n113.0\n14.0\n0.0\n1.82\nUnknown\nCastlemont\n17-18\n17\n1\n\n\n52\n3933\n2002-12-27\nF\nLatino\nTBD\nNot Special Ed\n9\n0.9344\n122.0\n8.0\n0.0\n2.94\nUnknown\nCastlemont\n17-18\n15\n0\n\n\n53\n3936\n2002-11-16\nM\nLatino\nTBD\nNot Special Ed\n9\n0.9426\n122.0\n7.0\n0.0\n1.76\nUnknown\nCastlemont\n17-18\n15\n0\n\n\n201\n14335\n2000-03-04\nM\nLatino\nTBD\nNot Special Ed\n9\n0.6889\n45.0\n14.0\n0.0\n0.00\nUnknown\nCastlemont\n17-18\n17\n1\n\n\n251\n17703\n2001-01-22\nM\nLatino\nTBD\nNot Special Ed\n9\n1.0000\n9.0\n0.0\n0.0\n0.00\nUnknown\nCastlemont\n17-18\n16\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n20067\n26375\n2016-11-21\nF\nLatino\nTBD\nNot Special Ed\n-1\n0.8788\n33.0\n4.0\n0.0\nNaN\nNot SED\nPrescott\n21-22\n5\n1\n\n\n20068\n26376\n2016-12-21\nF\nLatino\nTBD\nNot Special Ed\n-1\n0.8788\n33.0\n4.0\n0.0\nNaN\nNot SED\nPrescott\n21-22\n5\n1\n\n\n20548\n35013\n2006-06-15\nM\nNot Reported\nTBD\nNot Special Ed\n6\n0.6667\n6.0\n2.0\n0.0\n0.00\nUnknown\nWOMS\n17-18\n11\n1\n\n\n20549\n35015\n2003-11-02\nF\nNot Reported\nTBD\nNot Special Ed\n7\n0.6667\n6.0\n2.0\n0.0\n0.00\nUnknown\nWOMS\n17-18\n14\n1\n\n\n20904\n1962\n2007-11-02\nM\nAsian\nTBD\nNot Special Ed\n6\n1.0000\n5.0\n0.0\n0.0\n0.00\nNot SED\nWOMS\n19-20\n12\n0\n\n\n\n\n68 rows × 17 columns\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n\n    \n  \n\n\n\n# Replace all 'TBD' left as 'Unknown' in the dataset\nschools_cleaned['Fluency'] = schools_cleaned['Fluency'].replace('TBD', 'Unknown')\nschools_cleaned['Fluency'].value_counts()\n\n\n\n\n\n\n\n\ncount\n\n\nFluency\n\n\n\n\n\nEO\n10638\n\n\nEL\n8308\n\n\nRFEP\n2683\n\n\nIFEP\n266\n\n\nUnknown\n70\n\n\n\n\ndtype: int64\n\n\n\n\nSED\nFrom the Theil’s U correlation heatmap in section 2, I observed a strong predictive relationship between Year and SED. In this section, I’ll explore the reason behind this relationship. By plotting the distribution of SED values across different years, I found that in the two school years 2017-18 and 2018-19, SED values were consistently labeled as Unknown. This finding aligns with the observed relationship between Year and SED in the heatmap.\nUpon further investigation, examining students with Unknown values in SED revealed a pattern: these students often have this column filled with meaningful information in the following school years. Following this pattern, I applied the same process to fill in Unknown values for SED where possible. Although some Unknown values remain, we can retain these records as they still contribute valuable information to other variables.\n\n# Plot SED counts per Year\nplt.figure(figsize=(10, 5))\nsns.countplot(data=schools, y='Year', hue='SED', palette='Paired')\nplt.title('SED Counts per Year', fontweight='bold', color='darkblue')\nplt.grid(True, linestyle='--', alpha=0.5)\n\n\n\n\n\n\n\n\n\n# Function to fill 'Unknown' 'SED' with matching 'ANON_ID' values\ndef fill_SED(row):\n    if row['SED'] == 'Unknown':\n        # Find the first non-null value of 'SED' for the same 'ANON_ID'\n        matching_value = schools_cleaned[(schools_cleaned['ANON_ID'] == row['ANON_ID']) & (schools_cleaned['SED'].notna()) & (~schools_cleaned['SED'].isin(['Unknown']))]\n\n        # If there is a match, return its 'SED' value; otherwise, return the original 'SED'\n        if not matching_value.empty:\n            return matching_value.iloc[0]['SED']\n    return row['SED']\n\n# Apply the function to the 'SED' column\nschools_cleaned['SED'] = schools_cleaned.apply(fill_SED, axis=1)\n\n\n\nDuplicates and Irrelevant: Before and After\n\n#SED: Before and after\nfig, axs = plt.subplots(\n    nrows=1, ncols=2,\n    figsize=(24, 10)\n)\nsns.countplot(data=schools, y='Year', hue='SED', palette='Paired', ax=axs[0])\naxs[0].set_title('SED Counts per Year Before Cleaning', fontweight='bold', color='darkblue')\naxs[0].grid(True, linestyle='--', alpha=0.5)\nsns.countplot(data=schools_cleaned, y='Year', hue='SED', palette='Paired', ax=axs[1])\naxs[1].set_title('SED Counts per Year After Cleaning', fontweight='bold', color='darkblue')\naxs[1].grid(True, linestyle='--', alpha=0.5)\nplt.show()\n\n\n\n\n\n\n\n\n\n# Theil's U Heat Map before and After\ncat_cols_cleaned = ['Gen', 'Eth', 'Fluency', 'SpEd', 'Grade', 'SED', 'Age', 'Year', 'School','AcademicStatus', 'ChroAbs']\n# Create an empty DataFrame to store Theil's U values\ntheils_u_matrix_cleaned = pd.DataFrame(index=cat_cols_cleaned, columns=cat_cols_cleaned)\n\n# Fill the matrix with Theil's U values\nfor col1 in cat_cols_cleaned:\n    for col2 in cat_cols_cleaned:\n        if col1 == col2:\n            theils_u_matrix_cleaned.loc[col1, col2] = 1  # Perfect association with itself\n        else:\n            theils_u_matrix_cleaned.loc[col1, col2] = theils_u(schools_cleaned[col1], schools_cleaned[col2])\n\n# Convert to float for heatmap compatibility\ntheils_u_matrix_cleaned = theils_u_matrix_cleaned.astype(float)\n\nfig, axs = plt.subplots(\n    nrows=1, ncols=2,\n    figsize=(24, 10)\n)\n\n# Plot the heatmap\n\nsns.heatmap(theils_u_matrix_cleaned, annot=True, cmap=\"YlGnBu\", square=True, ax=axs[1])\naxs[1].set_title(\"Theil's  U Heatmap of Categorical Variables After Cleaning\")\nsns.heatmap(theils_u_matrix, annot=True, cmap=\"YlGnBu\", square=True, ax=axs[0])\naxs[0].set_title(\"Theil's U Heatmap of Categorical Variables Before Cleaning\")\nplt.show()\n\n\n\n\n\n\n\n\nObservation: After modifying the Fluency and SED columns, I observed that Fluency retains its predictive power on Chronic Absenteeism, while SED shows a significant decrease in predictive strength (dropping from 0.0035 to 0.00035). One possible reason is that replacing Unknown values in SED diluted the relationship between Year and SED—since school years 2017-18 and 2018-19 no longer consist exclusively of Unknown values, SED no longer inherits the predictive power of Year on Chronic Absenteeism (where Year has the strongest predictive power).\nAdditionally, after transforming GPA into the categorical variable Academic Status, the heatmap now includes this new variable. Academic Status shows a strong predictive power on Chronic Absenteeism, with a correlation of 0.05, second only to Year. This aligns with the Pearson correlation heatmap observation where GPA and Attendance Rate had a strong correlation. Furthermore, Academic Status exhibits moderate predictive power on School, likely because elementary schools (covering grades -1 to 5) only have Unknown values in Academic Status."
  },
  {
    "objectID": "posts/chronic-absenteeism/DataExploration.html#next-steps",
    "href": "posts/chronic-absenteeism/DataExploration.html#next-steps",
    "title": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools",
    "section": "5. Next Steps",
    "text": "5. Next Steps\n\nX_col = ['Fluency','SpEd','SED', 'Grade', 'SED', 'Year', 'School', 'AcademicStatus']\ny_col = 'ChroAbs'\n\n\nfrom sklearn.model_selection import train_test_split\n\nX = df_transformed\ny = schools_cleaned[y_col]\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n\ndf_train = pd.concat([X_train, y_train], axis=1)\ndf_test = pd.concat([X_test, y_test], axis=1)\n\nNext Steps:\n- Train a classification model using X_train and y_train.\n- Evaluate its accuracy, precision, recall, and other metrics on X_test, y_test.\nThank you for reading! This completes the data exploration phase and sets the stage for more detailed modeling and intervention planning."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "A Comprehensive Exploration of Chronic Absenteeism Data Across Seven Schools\n\n\n\n\n\n\ndata analysis\n\n\nmachine learning\n\n\n\n\n\n\n\n\n\nLan Dinh\n\n\n\n\n\n\n\n\n\n\n\n\nInference and Prediction of PM2.5 Exposure on Youth’s Mobility Outcomes\n\n\n\n\n\n\ncausal inference\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  }
]